# Root logger option
log4j.rootLogger=ALL, stdout, file

# Redirect log messages to console
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target=System.out
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %-5p %c{1}:%L - %m%n

# Redirect log messages to a log file, support file rolling.
log4j.appender.file=org.apache.log4j.RollingFileAppender
log4j.appender.file.File=ficherolog.log
log4j.appender.file.MaxFileSize=10MB
log4j.appender.file.MaxBackupIndex=10
log4j.appender.file.layout=org.apache.log4j.PatternLayout
log4j.appender.file.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %-5p %c{1}:%L - %m%


#log4j.logger.CRUD3 = ALL, appenderGeneral
#
## Los appenders más usuales son:
##FileAppender / RollingFileAppender. Salida redirigida a un fichero de texto .log
##SocketAppender. Hacía un servidor remoto para almacenar los registros
##SMTPAppender. A un correo electrónico
##JDBCAppender. Hacía una base de datos
##ConsoleAppender. Salida por consola. En un entorno de producción no se suele usar esta forma por perder gran parte de
##su utilidad pero mientras se desarrolla es una forma útil de ver logs in situ.
#
#log4j.appender.appenderGeneral=org.apache.log4j.RollingFileAppender
#log4j.appender.appenderGeneral.File=log/general.log
#log4j.appender.appenderGeneral.MaxFileSize=10MB
#log4j.appender.appenderGeneral.layout=org.apache.log4j.PatternLayout
#log4j.appender.appenderGeneral.layout.ConversionPattern=[%d{yyyy-MM-dd HH:mm:ss}] [ %-5p] [%c{1}:%L] %m%n
